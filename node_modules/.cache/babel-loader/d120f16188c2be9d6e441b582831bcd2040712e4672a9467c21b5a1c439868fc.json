{"ast":null,"code":"var _jsxFileName = \"/home/rishi/Downloads/notus-react-main/src/views/admin/Tables.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport CardTable from \"components/Cards/CardTable.js\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function Tables() {\n  _s();\n  const [visitors, setVisitors] = useState([]);\n  const [visitorModalVisible, setVisitorModalVisible] = useState(false);\n  const [emailModalVisible, setEmailModalVisible] = useState(false);\n  const [visitorData, setVisitorData] = useState({\n    name: '',\n    contact: '',\n    visitDate: '',\n    reason: ''\n  });\n  const [emailData, setEmailData] = useState({\n    email: '',\n    emailPassword: ''\n  });\n\n  // useEffect(() => {\n  //   const userId = localStorage.getItem('userId');\n  //   if (!localStorage.getItem('role')) {\n  //     window.location.href = 'https://iotcom.io/';\n  //   }\n\n  //   // Fetch visits for the logged-in host\n  //   loadVisits(userId);\n\n  //   // Check if the logged-in host has an email\n  //   checkForEmail(userId);\n  // }, []);\n\n  const loadVisits = async userId => {\n    try {\n      const response = await fetch(`http://localhost:5000/api/visitors?hostId=${userId}`);\n      const visitsData = await response.json();\n      setVisitors(visitsData);\n    } catch (error) {\n      console.error('Error fetching visits:', error);\n    }\n  };\n  const checkForEmail = async userId => {\n    try {\n      const response = await fetch(`http://localhost:5000/api/users/${userId}`);\n      const user = await response.json();\n      if (!user.email || !user.emailPassword) {\n        setEmailModalVisible(true);\n      }\n    } catch (error) {\n      console.error('Error fetching user:', error);\n    }\n  };\n  const handleVisitorSubmit = async e => {\n    e.preventDefault();\n    const hostId = localStorage.getItem('userId');\n    try {\n      const response = await fetch('http://localhost:5000/api/visitors', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          ...visitorData,\n          hostId\n        })\n      });\n      if (response.ok) {\n        alert('Visitor successfully registered');\n        setVisitorModalVisible(false);\n        setVisitorData({\n          name: '',\n          contact: '',\n          visitDate: '',\n          reason: ''\n        });\n        loadVisits(hostId); // Refresh visit list\n      } else {\n        alert('Error registering visitor');\n      }\n    } catch (error) {\n      console.error('Error:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex flex-wrap mt-4\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"w-full mb-12 px-4\",\n        children: /*#__PURE__*/_jsxDEV(CardTable, {\n          visitors: visitors\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"w-full mb-12 px-4\",\n        children: /*#__PURE__*/_jsxDEV(CardTable, {\n          color: \"dark\",\n          visitors: visitors\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this), visitorModalVisible && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"modal\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 9\n    }, this), emailModalVisible && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"modal\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n}\n_s(Tables, \"Dl6GzxRLU5moAu+QkIf1WFQ3HpE=\");\n_c = Tables;\nvar _c;\n$RefreshReg$(_c, \"Tables\");","map":{"version":3,"names":["React","useState","useEffect","CardTable","jsxDEV","_jsxDEV","Fragment","_Fragment","Tables","_s","visitors","setVisitors","visitorModalVisible","setVisitorModalVisible","emailModalVisible","setEmailModalVisible","visitorData","setVisitorData","name","contact","visitDate","reason","emailData","setEmailData","email","emailPassword","loadVisits","userId","response","fetch","visitsData","json","error","console","checkForEmail","user","handleVisitorSubmit","e","preventDefault","hostId","localStorage","getItem","method","headers","body","JSON","stringify","ok","alert","children","className","fileName","_jsxFileName","lineNumber","columnNumber","color","_c","$RefreshReg$"],"sources":["/home/rishi/Downloads/notus-react-main/src/views/admin/Tables.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport CardTable from \"components/Cards/CardTable.js\";\n\nexport default function Tables() {\n  const [visitors, setVisitors] = useState([]);\n  const [visitorModalVisible, setVisitorModalVisible] = useState(false);\n  const [emailModalVisible, setEmailModalVisible] = useState(false);\n  const [visitorData, setVisitorData] = useState({\n    name: '',\n    contact: '',\n    visitDate: '',\n    reason: '',\n  });\n  const [emailData, setEmailData] = useState({\n    email: '',\n    emailPassword: '',\n  });\n\n  // useEffect(() => {\n  //   const userId = localStorage.getItem('userId');\n  //   if (!localStorage.getItem('role')) {\n  //     window.location.href = 'https://iotcom.io/';\n  //   }\n\n  //   // Fetch visits for the logged-in host\n  //   loadVisits(userId);\n\n  //   // Check if the logged-in host has an email\n  //   checkForEmail(userId);\n  // }, []);\n\n  const loadVisits = async (userId) => {\n    try {\n      const response = await fetch(`http://localhost:5000/api/visitors?hostId=${userId}`);\n      const visitsData = await response.json();\n      setVisitors(visitsData);\n    } catch (error) {\n      console.error('Error fetching visits:', error);\n    }\n  };\n\n  const checkForEmail = async (userId) => {\n    try {\n      const response = await fetch(`http://localhost:5000/api/users/${userId}`);\n      const user = await response.json();\n      if (!user.email || !user.emailPassword) {\n        setEmailModalVisible(true);\n      }\n    } catch (error) {\n      console.error('Error fetching user:', error);\n    }\n  };\n\n\n\n  const handleVisitorSubmit = async (e) => {\n    e.preventDefault();\n    const hostId = localStorage.getItem('userId');\n    try {\n      const response = await fetch('http://localhost:5000/api/visitors', {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify({ ...visitorData, hostId }),\n      });\n      if (response.ok) {\n        alert('Visitor successfully registered');\n        setVisitorModalVisible(false);\n        setVisitorData({ name: '', contact: '', visitDate: '', reason: '' });\n        loadVisits(hostId); // Refresh visit list\n      } else {\n        alert('Error registering visitor');\n      }\n    } catch (error) {\n      console.error('Error:', error);\n    }\n  };\n\n  return (\n    <>\n      <div className=\"flex flex-wrap mt-4\">\n        <div className=\"w-full mb-12 px-4\">\n          <CardTable visitors={visitors} />\n        </div>\n        <div className=\"w-full mb-12 px-4\">\n          <CardTable color=\"dark\" visitors={visitors} />\n        </div>\n      </div>\n\n      {/* Visitor Modal */}\n      {visitorModalVisible && (\n        <div className=\"modal\">\n          {/* Modal Content */}\n        </div>\n      )}\n\n      {/* Email Modal */}\n      {emailModalVisible && (\n        <div className=\"modal\">\n          {/* Modal Content */}\n        </div>\n      )}\n    </>\n  );\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}