{"ast":null,"code":"var _jsxFileName = \"/home/rishi/Downloads/notus-react-main/src/index.js\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { BrowserRouter, Route, Switch, Redirect } from \"react-router-dom\";\nimport \"@fortawesome/fontawesome-free/css/all.min.css\";\nimport \"assets/styles/tailwind.css\";\n\n// layouts\nimport Admin from \"layouts/Admin.js\";\nimport Login from \"layouts/Login\"; // Adjust this import based on your folder structure\n\n// views without layouts\nimport Profile from \"views/Profile.js\";\nimport Index from \"views/Index.js\";\n\n// Helper function to check if the user is authenticated\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst isAuthenticated = () => {\n  const role = localStorage.getItem('role');\n  return role === 'host' || role === 'receptionist'; // Adjust based on your roles\n};\nReactDOM.render(/*#__PURE__*/_jsxDEV(BrowserRouter, {\n  children: /*#__PURE__*/_jsxDEV(Switch, {\n    children: [/*#__PURE__*/_jsxDEV(Route, {\n      path: \"/admin\",\n      render: () => isAuthenticated() ? /*#__PURE__*/_jsxDEV(Admin, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 31\n      }, this) : /*#__PURE__*/_jsxDEV(Redirect, {\n        to: \"/\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 43\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Route, {\n      path: \"/\",\n      exact: true,\n      component: Login\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Route, {\n      path: \"/profile\",\n      exact: true,\n      component: Profile\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Redirect, {\n      from: \"*\",\n      to: \"/\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 5\n  }, this)\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 23,\n  columnNumber: 3\n}, this), document.getElementById(\"root\"));","map":{"version":3,"names":["React","ReactDOM","BrowserRouter","Route","Switch","Redirect","Admin","Login","Profile","Index","jsxDEV","_jsxDEV","isAuthenticated","role","localStorage","getItem","render","children","path","fileName","_jsxFileName","lineNumber","columnNumber","to","exact","component","from","document","getElementById"],"sources":["/home/rishi/Downloads/notus-react-main/src/index.js"],"sourcesContent":["import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { BrowserRouter, Route, Switch, Redirect } from \"react-router-dom\";\n\nimport \"@fortawesome/fontawesome-free/css/all.min.css\";\nimport \"assets/styles/tailwind.css\";\n\n// layouts\nimport Admin from \"layouts/Admin.js\";\nimport Login from \"layouts/Login\"; // Adjust this import based on your folder structure\n\n// views without layouts\nimport Profile from \"views/Profile.js\";\nimport Index from \"views/Index.js\";\n\n// Helper function to check if the user is authenticated\nconst isAuthenticated = () => {\n  const role = localStorage.getItem('role');\n  return role === 'host' || role === 'receptionist'; // Adjust based on your roles\n};\n\nReactDOM.render(\n  <BrowserRouter>\n    <Switch>\n      {/* Protected Admin Route */}\n      <Route \n        path=\"/admin\" \n        render={() => \n          isAuthenticated() ? <Admin /> : <Redirect to=\"/\" />\n        } \n      />\n      {/* Login Route */}\n      <Route path=\"/\" exact component={Login} />\n      {/* Other Routes */}\n      <Route path=\"/profile\" exact component={Profile} />\n      {/* Redirect to login if not authenticated */}\n      <Redirect from=\"*\" to=\"/\" />\n    </Switch>\n  </BrowserRouter>,\n  document.getElementById(\"root\")\n);\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,QAAQ,MAAM,WAAW;AAChC,SAASC,aAAa,EAAEC,KAAK,EAAEC,MAAM,EAAEC,QAAQ,QAAQ,kBAAkB;AAEzE,OAAO,+CAA+C;AACtD,OAAO,4BAA4B;;AAEnC;AACA,OAAOC,KAAK,MAAM,kBAAkB;AACpC,OAAOC,KAAK,MAAM,eAAe,CAAC,CAAC;;AAEnC;AACA,OAAOC,OAAO,MAAM,kBAAkB;AACtC,OAAOC,KAAK,MAAM,gBAAgB;;AAElC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,MAAMC,eAAe,GAAGA,CAAA,KAAM;EAC5B,MAAMC,IAAI,GAAGC,YAAY,CAACC,OAAO,CAAC,MAAM,CAAC;EACzC,OAAOF,IAAI,KAAK,MAAM,IAAIA,IAAI,KAAK,cAAc,CAAC,CAAC;AACrD,CAAC;AAEDZ,QAAQ,CAACe,MAAM,cACbL,OAAA,CAACT,aAAa;EAAAe,QAAA,eACZN,OAAA,CAACP,MAAM;IAAAa,QAAA,gBAELN,OAAA,CAACR,KAAK;MACJe,IAAI,EAAC,QAAQ;MACbF,MAAM,EAAEA,CAAA,KACNJ,eAAe,CAAC,CAAC,gBAAGD,OAAA,CAACL,KAAK;QAAAa,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,gBAAGX,OAAA,CAACN,QAAQ;QAACkB,EAAE,EAAC;MAAG;QAAAJ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE;IACnD;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACF,CAAC,eAEFX,OAAA,CAACR,KAAK;MAACe,IAAI,EAAC,GAAG;MAACM,KAAK;MAACC,SAAS,EAAElB;IAAM;MAAAY,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAE1CX,OAAA,CAACR,KAAK;MAACe,IAAI,EAAC,UAAU;MAACM,KAAK;MAACC,SAAS,EAAEjB;IAAQ;MAAAW,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAEnDX,OAAA,CAACN,QAAQ;MAACqB,IAAI,EAAC,GAAG;MAACH,EAAE,EAAC;IAAG;MAAAJ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACtB;AAAC;EAAAH,QAAA,EAAAC,YAAA;EAAAC,UAAA;EAAAC,YAAA;AAAA,OACI,CAAC,EAChBK,QAAQ,CAACC,cAAc,CAAC,MAAM,CAChC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}